[{"/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/reportWebVitals.js":"1","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/screens/login/login.js":"2","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/componet/button.js":"3","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/screens/ladingpage/landingpage.js":"4","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/screens/index.js":"5","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/screens/singup/signup.js":"6","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/routes/routes.js":"7","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/screens/ladingpage/material.js":"8","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/assets/index.js":"9","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/index.js":"10","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/firebaseconfig/firebaseconfig.js":"11","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/Auth/withAuth.js":"12","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/screens/joblist/joblist.js":"13","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/componet/loading.js":"14"},{"size":362,"mtime":1606979300779,"results":"15","hashOfConfig":"16"},{"size":3096,"mtime":1607088390188,"results":"17","hashOfConfig":"16"},{"size":175,"mtime":1606979300776,"results":"18","hashOfConfig":"16"},{"size":4931,"mtime":1607148868490,"results":"19","hashOfConfig":"16"},{"size":197,"mtime":1607068616170,"results":"20","hashOfConfig":"16"},{"size":3119,"mtime":1607088420827,"results":"21","hashOfConfig":"16"},{"size":1684,"mtime":1607146514280,"results":"22","hashOfConfig":"16"},{"size":761,"mtime":1606983524735,"results":"23","hashOfConfig":"16"},{"size":166,"mtime":1607086938520,"results":"24","hashOfConfig":"16"},{"size":570,"mtime":1607089630563,"results":"25","hashOfConfig":"16"},{"size":454,"mtime":1607002123396,"results":"26","hashOfConfig":"16"},{"size":497,"mtime":1607052563127,"results":"27","hashOfConfig":"16"},{"size":10120,"mtime":1607099177145,"results":"28","hashOfConfig":"16"},{"size":372,"mtime":1607088023565,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ogymjk",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/reportWebVitals.js",[],["69","70"],"/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/screens/login/login.js",["71","72","73"],"import React,{ Component,useState } from 'react'\nimport './login.css';\nimport logo from '../../logo.svg';\nimport Button from '../../componet/button'\nimport Signup from '../singup/signup';\nimport Loader from '../../componet/loading'\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nclass login extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { email: \"\",password: \"\",error: \"\",isloding: false }\n  }\n\n  onSubmit = () => {\n    this.setState({isloding:true},()=>{});\n    const { email,password } = this.state;\n    const auth = firebase.auth();\n    auth.signInWithEmailAndPassword(email,password)\n      .then((res) => {\n        setTimeout(()=>{\n          this.props.history.push('/home');\n          console.log('res ',res);\n          this.setState({isloding:false},()=>{});\n        },1500);\n      })\n      .catch(error => {\n        console.log('err ',error);\n        this.setState({ error: error.message },() => { });\n        setTimeout(()=>{\n          this.setState({isloding:false},()=>{});\n        },1500);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"login\">\n        <header className=\"login-header\">\n          <p>\n            Login\n          </p>\n        </header>\n\n        <div className=\"container\">\n\n  \n\n          {/* logo */}\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n          {/* input fields  */}\n\n          <div className=\"innerItem\">\n            <p className=\"errorMessage\">{this.state.error}</p>\n            {this.state.isloding && (<Loader></Loader>)}\n            <input\n              value={this.state.email}\n              className=\"input\"\n              placeholder=\"Email *\"\n              onChange={(event) => { this.setState({ email: event.target.value }) }}>\n            </input>\n\n            <input\n              value={this.state.password}\n              className=\"input\"\n              placeholder=\"Password *\"\n              onChange={(event) => { this.setState({ password: event.target.value }) }}>\n            </input>\n\n          </div>\n\n          {/* custom button */}\n\n          <Button onPress={() => {\n            console.log('dfgdsf');\n            this.onSubmit()\n\n          }} title=\"Submit\" style={{\n            button: {\n              width: \"200px\",\n              \"backgroundColor\": \"#282c34\",\n              display: \"block\",\n              margin: \"auto\",\n              \"borderRadius\": \"15px\",\n            },text: { color: \"#fff\",padding: \"9px\" }\n          }}></Button>\n          {/* custom button */}\n\n\n          {/* for new user */}\n          <p>Not Yet Register</p>\n          <Button onPress={() => {\n\n            this.props.history.push('signup');\n\n\n          }} title=\"Sign Up\" style={{\n            button: {\n              width: \"200px\",\n              \"backgroundColor\": \"#282c34\",\n              display: \"block\",\n              margin: \"auto\",\n              \"borderRadius\": \"15px\",\n            },text: { color: \"#fff\",padding: \"9px\" }\n          }}></Button>\n        </div>\n      </div>\n    );\n  }\n  componentDidMount() {\n\n  }\n\n\n  launchApp = () => { }\n}\nexport default login",["74","75"],"/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/componet/button.js",[],"/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/screens/ladingpage/landingpage.js",["76","77","78","79","80","81","82","83","84","85","86"],"import React,{ Component } from 'react'\nimport './style.css'\nimport assets from '../../assets/index'\nimport Loader from '../../componet/loading'\nimport back from '../../assets/images/back.png'\nimport logout from '../../assets/images/logout.png'\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nconst url = \"https://api.github.com/users/web-flow/followers\";\n\nexport default class landingpage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { list: [],loading: false };\n    }\n\n    onClick = () => {\n        console.log('called')\n        this.props.history.push('/joblist');\n    };\n    render() {\n        return (\n            <div className=\"login\">\n                <header className=\"login-header\"><p>Home</p>\n                    {/* <img onClick={() => { this.props.history.goBack(); }} className=\"leftIcon\" key={new Date().getTime()} src={back}></img> */}\n                    <img onClick={() => {\n\n                        firebase.auth()\n                            .signOut()\n                            .then(() => {\n                                this.props.history.goBack();\n                            })\n                            .catch(() => {\n                                this.props.history.goBack();\n                            });\n\n                    }} className=\"rightIcon\" key={new Date().getTime()} src={logout}></img>\n                </header>\n                <div className=\"container\">\n                    {/* { <Loader></Loader>} */}\n                    {this.state.loading && <Loader></Loader>}\n                    <div className=\"grid-container\">\n\n                        {this.state.list.map((obj,index) => {\n                            return (\n                                <div onClick={() => { this.onClick() }} className=\"grid-item\" key={index}>\n                                    <div key={index} className=\"grid-item\">\n                                        <img key={index + new Date().getTime()} src={obj.avatar_url} alt={index + new Date().getTime()}></img>\n                                        {obj.title ? obj.title : \"Others\"}\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    componentDidMount() {\n        this.setState({ loading: true },() => { });\n        this.showList();\n        this.callApi();\n    }\n    showList = () => {\n        let list = [\n            { img: assets.images.jobtab,title: \"Web , Mobile & Software Dev\" },\n            { img: assets.images.jobtab,title: \"Design & Creative\" },\n            { img: assets.images.jobtab,title: \"Writing\" },\n            { img: assets.images.jobtab,title: \"Sales & Marketing\" },\n            { img: assets.images.jobtab,title: \"Admin Support\" },\n            { img: assets.images.jobtab,title: \"Customer Support\" },\n            { img: assets.images.jobtab,title: \"Data Science & Analytics\" },\n            { img: assets.images.jobtab,title: \"Engineering & Architecture\" }\n        ];\n\n    }\n\n    async getJobist(list) {\n        let clist = [];\n        clist = await list\n            .map((obj,index) => {\n                if (index == 0) {\n                    obj.title = \"Web , Mobile & Software Dev\";\n                } else if (index == 1) {\n                    obj.title = \"Design & Creative\";\n                } else if (index == 2) {\n                    obj.title = \"Writing\";\n                } else if (index == 3) {\n                    obj.title = \"Sales & Marketing\";\n                } else if (index == 4) {\n                    obj.title = \"Admin Support\";\n                } else if (index == 5) {\n                    obj.title = \"Customer Support\";\n                } else if (index == 6) {\n                    obj.title = \"Data Science & Analytics\";\n                } else if (index == 7) {\n                    obj.title = \"Engineering & Architecture\";\n                }else{\n                    obj.title = \"Others\";\n                }\n                return obj;\n            });\n        console.log(clist);\n        this.setState({ list: clist },() => { });\n    }\n    callApi = () => {\n        console.log(url)\n        fetch(url,{\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .then((data) => data.json())\n            .then((response) => {\n                this.getJobist(response)\n                    .then(() => {\n                        this.setState({ loading: false },() => { });\n                    })\n                    .catch(() => {\n                        this.setState({ loading: false },() => { });\n                    });\n            })\n            .catch((error) => {\n                console.log(error);\n                this.setState({ loading: false },() => { });\n            })\n    }\n}\n","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/screens/index.js",[],"/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/screens/singup/signup.js",["87"],"import React,{ Component } from 'react'\nimport './signup.css';\nimport logo from '../../logo.svg';\nimport Button from '../../componet/button'\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport Loader from '../../componet/loading'\nclass signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { email: \"\",password: \"\",error: \"\",isloding: false }\n  }\n\n  onSubmit = () => {\n    this.setState({isloding:true},()=>{});\n    const { email,password } = this.state;\n    const auth = firebase.auth();\n    auth.createUserWithEmailAndPassword(email,password)\n      .then((res) => {\n        setTimeout(() => {\n          this.props.history.push('/home');\n          console.log('res ',res);\n          this.setState({ isloding: false },() => { });\n        },1500);\n      })\n      .catch((error) => {\n        console.log('err ',error);\n        this.setState({ error: error.message },() => { });\n        setTimeout(() => {\n          this.setState({ isloding: false },() => { });\n        },1500);\n      });\n  };\n  render() {\n    return (\n      <div className=\"login\">\n        <header className=\"login-header\">\n          <p>\n            Sign up\n          </p>\n        </header>\n\n        <div className=\"container\">\n\n\n          {/* logo */}\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n          {/* input fields  */}\n\n          <div className=\"innerItem\">\n            <p className=\"errorMessage\">{this.state.error}</p>\n            {this.state.isloding && (<Loader></Loader>)}\n            <input\n              value={this.state.email}\n              className=\"input\"\n              placeholder=\"Email *\"\n              onChange={(event) => { this.setState({ email: event.target.value }) }}>\n            </input>\n            <input\n              value={this.state.password}\n              className=\"input\"\n              placeholder=\"Password *\"\n              onChange={(event) => { this.setState({ password: event.target.value }) }}>\n            </input>\n          </div>\n\n          {/* custom button */}\n\n          <Button onPress={() => {\n            console.log('dfgdsf');\n\n            this.onSubmit()\n\n          }} title=\"Submit\" style={{\n            button: {\n              width: \"200px\",\n              \"backgroundColor\": \"#282c34\",\n              display: \"block\",\n              margin: \"auto\",\n              \"borderRadius\": \"15px\",\n            },text: { color: \"#fff\",padding: \"9px\" }\n          }}></Button>\n          {/* custom button */}\n\n\n          {/* for new user */}\n          <p>Already Register</p>\n          <Button onPress={() => {\n\n            // this.props.history.push('/login');\n            this.props.history.goBack();\n\n\n          }} title=\"Log In\" style={{\n            button: {\n              width: \"200px\",\n              \"backgroundColor\": \"#282c34\",\n              display: \"block\",\n              margin: \"auto\",\n              \"borderRadius\": \"15px\",\n            },text: { color: \"#fff\",padding: \"9px\" }\n          }}></Button>\n        </div>\n      </div>\n    );\n  }\n  componentDidMount() { }\n  launchApp = (routeName) => { }\n}\nexport default signup;\n","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/routes/routes.js",["88"],"import React,{ Component } from 'react'\nimport { Login,Signup,Home,Joblist } from '../screens/index.js'\nimport { BrowserRouter as Router,Switch,Route,Link,Redirect } from \"react-router-dom\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nconst PrivateRoute = ({ component: Component,authed,...rest }) => {\n  console.log(\"authed \",authed)\n  return (\n    <Route\n      {...rest}\n      render={(props) => \n        \n        authed === true ? <Component {...props} /> : <Redirect to={{ pathname: '/login',state: { from: props.location } }} />}\n    />\n  )\n}\nexport default class Routes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { authed: false }\n  }\n  componentWillMount() {\n    let auth = firebase.auth();\n    auth.onAuthStateChanged((user) => {\n      user != null ? this.setState({ authed: true },() => { }) : this.setState({ authed: false },() => { });\n    });\n  }\n  componentDidMount() {\n    let auth = firebase.auth();\n    auth.onAuthStateChanged((user) => {\n      user != null ? this.setState({ authed: true },() => { }) : this.setState({ authed: false },() => { });\n    });\n  }\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/login\" component={Login}></Route>\n          <Route exact path=\"/signup\" component={Signup} ></Route>\n          <Route exact path=\"/home\" component={Home} ></Route>\n          <Route exact path=\"/joblist\" component={Joblist} ></Route>\n          {/* <Route\n            exact\n            path=\"/\"\n            component={Home}></Route> */}\n          <PrivateRoute exact authed={this.state.authed} path='/' component={Home} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/screens/ladingpage/material.js",[],["89","90"],"/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/assets/index.js",["91"],"import jobtab from './images/jobtab.png'\nimport loader from './images/loader.gif'\nexport default {\n    images: {\n        jobtab:jobtab,\n        loader:loader\n    }\n}\n","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/index.js",["92"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport config from './firebaseconfig/firebaseconfig'\nimport Routes from './routes/routes';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/firebaseconfig/firebaseconfig.js",[],["93","94"],"/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/Auth/withAuth.js",["95","96","97","98"],"/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/screens/joblist/joblist.js",["99","100"],"import React,{ Component } from 'react';\nimport './style.scss'\nimport Button from '../../componet/button'\nimport back from '../../assets/images/back.png'\nclass Joblist extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { list: [] };\n    }\n    render() {\n        return (\n            <div className=\"jobContainer\">\n                <header\n                    className=\"header\">\n                    <img onClick={() => { this.props.history.goBack(); }} className=\"leftIcon\" key={new Date().getTime()} src={back}></img>\n                    <p>Job List</p>\n                </header>\n                <div className=\"gridContainer\">\n                    {this.state.list.map((obj,index) => {\n                        return (\n                            <div key={index} className=\"jobcard\">\n                                <h2>{obj.jobTitle}</h2>\n                                <div className=\"jCname\">\n                                    <span>{obj.cName}</span>\n                                </div>\n\n                                <div className=\"jAdress\">\n                                    <span>{obj.address}</span>\n                                </div>\n                                <div className=\"jSalary\">\n                                    <span>{obj.salary}</span>\n                                </div>\n\n                                <div className=\"jRequirement\">\n                                    Requirements\n                            <div className=\"jobCardReqItem\">\n                                        Exprience : {obj.experience}\n                                    </div>\n                                    <div className=\"jobCardReqItem\">\n                                        Degree : {obj.degree}\n                                    </div>\n                                </div>\n                                {obj.jobDescription.map((innerObj,inindex) => {\n                                    return (<div className=\"summary\">\n                                        <ul key={inindex}>\n                                            <li key={inindex}>{innerObj}</li>\n                                        </ul>\n\n                                    </div>);\n\n                                })}\n                                <div className=\"jPost\">\n                                    <span>{obj.jobPostDate}</span>\n                                    <span>{obj.jobStatus}</span>\n                                </div>\n\n                                <div key={index} className=\"buttonStyle\">Apply Now</div>\n                                {/* <Button onPress={() => { console.log('Apply Now Called '); }} title=\"Apply Now\"\n                                    style=\"buttonStyle\"\n                                    className=\"buttonStyle\"\n                                ></Button> */}\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n    componentDidMount() {\n        let list = [\n            {\n                jobTitle: \"Senior AR associate\",cName: \"Sun Medical billing pvt ltd\",\n                address: \"Hyderabad, Telangana\",experience: \"3 years (Required)\",\n                degree: \"Bachelor's (Required)\",jobStatus: \"Urgently hiring\",\n                jobPostDate: \"11 days ago\",jobEnd: \"1/12/2020\",\n                jobDescription: [\"Design various data models (schema) using the Brinqa platform as dictated by the customer use case.\",\n                    \"Design views, dashboards and reports to efficiently reflect the customer use case.\",\n                ],\n                jobType: \"Full-time\",isAvailable: true,salary: \"₹40,000 a month\",\n                rate: \"4.5\",status: \"Full-time\",remote: \"Yes\",jobDuties: \"Accounts receivable\"\n            },\n            {\n                jobTitle: \"healthcare business consultant\",cName: \"Sun Medical billing pvt ltd\",\n                address: \"Hyderabad, Telangana\",experience: \"3 years (Required)\",\n                degree: \"Bachelor's (Required)\",jobStatus: \"Urgently hiring\",\n                jobPostDate: \"11 days ago\",jobEnd: \"1/12/2020\",\n                jobDescription: [\"Design various data models (schema) using the Brinqa platform as dictated by the customer use case.\",\n                    \"Design views, dashboards and reports to efficiently reflect the customer use case.\",\n                ],\n                jobType: \"Full-time\",isAvailable: false,salary: \"₹40,000 a month\",\n                rate: \"4.5\",status: \"Full-time\",remote: \"Yes\",jobDuties: \"Accounts receivable\"\n            },\n            {\n                jobTitle: \"Senior AR associate\",cName: \"Sun Medical billing pvt ltd\",\n                address: \"Hyderabad, Telangana\",experience: \"3 years (Required)\",\n                degree: \"Bachelor's (Required)\",jobStatus: \"Urgently hiring\",\n                jobPostDate: \"11 days ago\",jobEnd: \"1/12/2020\",\n                jobDescription: [\"Design various data models (schema) using the Brinqa platform as dictated by the customer use case.\",\n                    \"Design views, dashboards and reports to efficiently reflect the customer use case.\",\n                ],\n                jobType: \"Full-time\",isAvailable: true,salary: \"₹40,000 a month\",\n                rate: \"4.5\",status: \"Full-time\",remote: \"Yes\",jobDuties: \"Accounts receivable\"\n            },\n            {\n                jobTitle: \"Senior AR associate\",cName: \"Sun Medical billing pvt ltd\",\n                address: \"Hyderabad, Telangana\",experience: \"3 years (Required)\",\n                degree: \"Bachelor's (Required)\",jobStatus: \"Urgently hiring\",\n                jobPostDate: \"11 days ago\",jobEnd: \"1/12/2020\",\n                jobDescription: [\"Design various data models (schema) using the Brinqa platform as dictated by the customer use case.\",\n                    \"Design views, dashboards and reports to efficiently reflect the customer use case.\",\n                ],\n                jobType: \"Full-time\",isAvailable: true,salary: \"₹40,000 a month\",\n                rate: \"4.5\",status: \"Full-time\",remote: \"Yes\",jobDuties: \"Accounts receivable\"\n            },\n            {\n                jobTitle: \"Senior AR associate\",cName: \"Sun Medical billing pvt ltd\",\n                address: \"Hyderabad, Telangana\",experience: \"3 years (Required)\",\n                degree: \"Bachelor's (Required)\",jobStatus: \"Urgently hiring\",\n                jobPostDate: \"11 days ago\",jobEnd: \"1/12/2020\",\n                jobDescription: [\"Design various data models (schema) using the Brinqa platform as dictated by the customer use case.\",\n                    \"Design views, dashboards and reports to efficiently reflect the customer use case.\",\n                ],\n                jobType: \"Full-time\",isAvailable: false,salary: \"₹40,000 a month\",\n                rate: \"4.5\",status: \"Full-time\",remote: \"Yes\",jobDuties: \"Accounts receivable\"\n            },{\n                jobTitle: \"Senior AR associate\",cName: \"Sun Medical billing pvt ltd\",\n                address: \"Hyderabad, Telangana\",experience: \"3 years (Required)\",\n                degree: \"Bachelor's (Required)\",jobStatus: \"Urgently hiring\",\n                jobPostDate: \"11 days ago\",jobEnd: \"1/12/2020\",\n                jobDescription: [\"Design various data models (schema) using the Brinqa platform as dictated by the customer use case.\",\n                    \"Design views, dashboards and reports to efficiently reflect the customer use case.\",\n                ],\n                jobType: \"Full-time\",isAvailable: true,salary: \"₹40,000 a month\",\n                rate: \"4.5\",status: \"Full-time\",remote: \"Yes\",jobDuties: \"Accounts receivable\"\n            },{\n                jobTitle: \"Senior AR associate\",cName: \"Sun Medical billing pvt ltd\",\n                address: \"Hyderabad, Telangana\",experience: \"3 years (Required)\",\n                degree: \"Bachelor's (Required)\",jobStatus: \"Urgently hiring\",\n                jobPostDate: \"11 days ago\",jobEnd: \"1/12/2020\",\n                jobDescription: [\"Design various data models (schema) using the Brinqa platform as dictated by the customer use case.\",\n                    \"Design views, dashboards and reports to efficiently reflect the customer use case.\",\n                ],\n                jobType: \"Full-time\",isAvailable: true,salary: \"₹40,000 a month\",\n                rate: \"4.5\",status: \"Full-time\",remote: \"Yes\",jobDuties: \"Accounts receivable\"\n            },{\n                jobTitle: \"Senior AR associate\",cName: \"Sun Medical billing pvt ltd\",\n                address: \"Hyderabad, Telangana\",experience: \"3 years (Required)\",\n                degree: \"Bachelor's (Required)\",jobStatus: \"Urgently hiring\",\n                jobPostDate: \"11 days ago\",jobEnd: \"1/12/2020\",\n                jobDescription: [\"Design various data models (schema) using the Brinqa platform as dictated by the customer use case.\",\n                    \"Design views, dashboards and reports to efficiently reflect the customer use case.\",\n                ],\n                jobType: \"Full-time\",isAvailable: true,salary: \"₹40,000 a month\",\n                rate: \"4.5\",status: \"Full-time\",remote: \"Yes\",jobDuties: \"Accounts receivable\"\n            },{\n                jobTitle: \"Senior AR associate\",cName: \"Sun Medical billing pvt ltd\",\n                address: \"Hyderabad, Telangana\",experience: \"3 years (Required)\",\n                degree: \"Bachelor's (Required)\",jobStatus: \"Urgently hiring\",\n                jobPostDate: \"11 days ago\",jobEnd: \"1/12/2020\",\n                jobDescription: [\"Design various data models (schema) using the Brinqa platform as dictated by the customer use case.\",\n                    \"Design views, dashboards and reports to efficiently reflect the customer use case.\",\n                ],\n                jobType: \"Full-time\",isAvailable: true,salary: \"₹40,000 a month\",\n                rate: \"4.5\",status: \"Full-time\",remote: \"Yes\",jobDuties: \"Accounts receivable\"\n            }\n        ];\n        this.setState({ list: list },() => { });\n    }\n}\n\nexport default Joblist;","/Users/abhishekqrao/Documents/Reactjs/ReactJsPoc/src/componet/loading.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":16,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"109","line":1,"column":26,"nodeType":"107","messageId":"108","endLine":1,"endColumn":34},{"ruleId":"105","severity":1,"message":"110","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":14},{"ruleId":"101","replacedBy":"111"},{"ruleId":"103","replacedBy":"112"},{"ruleId":"105","severity":1,"message":"113","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":12},{"ruleId":"114","severity":1,"message":"115","line":26,"column":21,"nodeType":"116","endLine":37,"endColumn":86},{"ruleId":"105","severity":1,"message":"117","line":65,"column":13,"nodeType":"107","messageId":"108","endLine":65,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":82,"column":27,"nodeType":"120","messageId":"121","endLine":82,"endColumn":29},{"ruleId":"118","severity":1,"message":"119","line":84,"column":34,"nodeType":"120","messageId":"121","endLine":84,"endColumn":36},{"ruleId":"118","severity":1,"message":"119","line":86,"column":34,"nodeType":"120","messageId":"121","endLine":86,"endColumn":36},{"ruleId":"118","severity":1,"message":"119","line":88,"column":34,"nodeType":"120","messageId":"121","endLine":88,"endColumn":36},{"ruleId":"118","severity":1,"message":"119","line":90,"column":34,"nodeType":"120","messageId":"121","endLine":90,"endColumn":36},{"ruleId":"118","severity":1,"message":"119","line":92,"column":34,"nodeType":"120","messageId":"121","endLine":92,"endColumn":36},{"ruleId":"118","severity":1,"message":"119","line":94,"column":34,"nodeType":"120","messageId":"121","endLine":94,"endColumn":36},{"ruleId":"118","severity":1,"message":"119","line":96,"column":34,"nodeType":"120","messageId":"121","endLine":96,"endColumn":36},{"ruleId":"105","severity":1,"message":"106","line":1,"column":16,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"122","line":3,"column":47,"nodeType":"107","messageId":"108","endLine":3,"endColumn":51},{"ruleId":"101","replacedBy":"123"},{"ruleId":"103","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":3,"column":1,"nodeType":"127","endLine":8,"endColumn":2},{"ruleId":"105","severity":1,"message":"128","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":14},{"ruleId":"101","replacedBy":"129"},{"ruleId":"103","replacedBy":"130"},{"ruleId":"105","severity":1,"message":"131","line":3,"column":27,"nodeType":"107","messageId":"108","endLine":3,"endColumn":33},{"ruleId":"105","severity":1,"message":"132","line":3,"column":34,"nodeType":"107","messageId":"108","endLine":3,"endColumn":40},{"ruleId":"105","severity":1,"message":"133","line":3,"column":41,"nodeType":"107","messageId":"108","endLine":3,"endColumn":46},{"ruleId":"105","severity":1,"message":"122","line":3,"column":47,"nodeType":"107","messageId":"108","endLine":3,"endColumn":51},{"ruleId":"105","severity":1,"message":"134","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"115","line":15,"column":21,"nodeType":"116","endLine":15,"endColumn":134},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Signup' is defined but never used.",["135"],["136"],"'back' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'list' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.",["135"],["136"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'config' is defined but never used.",["135"],["136"],"'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]